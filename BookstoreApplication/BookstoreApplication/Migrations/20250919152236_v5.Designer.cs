// <auto-generated />
using System;
using BookstoreApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookstoreApplication.Migrations
{
    [DbContext(typeof(LeafDbContext))]
    [Migration("20250919152236_v5")]
    partial class v5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Birthday");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "British writer and journalist.",
                            DateOfBirth = new DateTime(1903, 6, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "George Orwell"
                        },
                        new
                        {
                            Id = 2,
                            Biography = "English novelist known for romantic fiction.",
                            DateOfBirth = new DateTime(1775, 12, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Jane Austen"
                        },
                        new
                        {
                            Id = 3,
                            Biography = "British author best known for Harry Potter series.",
                            DateOfBirth = new DateTime(1965, 7, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "J.K. Rowling"
                        },
                        new
                        {
                            Id = 4,
                            Biography = "American writer and humorist.",
                            DateOfBirth = new DateTime(1835, 11, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Mark Twain"
                        },
                        new
                        {
                            Id = 5,
                            Biography = "Russian novelist, known for War and Peace.",
                            DateOfBirth = new DateTime(1828, 9, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Leo Tolstoy"
                        },
                        new
                        {
                            Id = 6,
                            Biography = "American novelist, short-story writer, and journalist.",
                            DateOfBirth = new DateTime(1899, 7, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Ernest Hemingway"
                        },
                        new
                        {
                            Id = 7,
                            Biography = "British writer known for detective novels.",
                            DateOfBirth = new DateTime(1890, 9, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Agatha Christie"
                        },
                        new
                        {
                            Id = 8,
                            Biography = "American novelist and short story writer.",
                            DateOfBirth = new DateTime(1896, 9, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "F. Scott Fitzgerald"
                        },
                        new
                        {
                            Id = 9,
                            Biography = "English writer and social critic.",
                            DateOfBirth = new DateTime(1812, 2, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Charles Dickens"
                        },
                        new
                        {
                            Id = 10,
                            Biography = "English writer, pioneer of modernist literature.",
                            DateOfBirth = new DateTime(1882, 1, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Virginia Woolf"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("AwardId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("AwardId");

                    b.ToTable("AuthorAwardBridge", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            AwardId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            AwardId = 2
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            AwardId = 3
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 3,
                            AwardId = 4
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 6,
                            AwardId = 1
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StartYear")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Awards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Award for achievements in newspaper, magazine and online journalism.",
                            Name = "Pulitzer Prize",
                            StartYear = 1917
                        },
                        new
                        {
                            Id = 2,
                            Description = "Award for outstanding contributions in literature.",
                            Name = "Nobel Prize in Literature",
                            StartYear = 1901
                        },
                        new
                        {
                            Id = 3,
                            Description = "Literary prize awarded each year for the best novel.",
                            Name = "Booker Prize",
                            StartYear = 1969
                        },
                        new
                        {
                            Id = 4,
                            Description = "Annual U.S. literary award.",
                            Name = "National Book Award",
                            StartYear = 1950
                        },
                        new
                        {
                            Id = 5,
                            Description = "Award for best science fiction or fantasy works.",
                            Name = "Hugo Award",
                            StartYear = 1953
                        },
                        new
                        {
                            Id = 6,
                            Description = "Award for best mystery fiction, non-fiction and television.",
                            Name = "Edgar Award",
                            StartYear = 1946
                        },
                        new
                        {
                            Id = 7,
                            Description = "UK literary prize for best original full-length novel written by a woman.",
                            Name = "Women's Prize for Fiction",
                            StartYear = 1996
                        },
                        new
                        {
                            Id = 8,
                            Description = "Literary prize recognizing books by writers based in the UK and Ireland.",
                            Name = "Costa Book Award",
                            StartYear = 1971
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PageCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            ISBN = "9780451524935",
                            PageCount = 328,
                            PublishedDate = new DateTime(1949, 6, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            ISBN = "9780451526342",
                            PageCount = 112,
                            PublishedDate = new DateTime(1945, 8, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Animal Farm"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            ISBN = "9780141439518",
                            PageCount = 432,
                            PublishedDate = new DateTime(1813, 1, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            ISBN = "9780141439587",
                            PageCount = 474,
                            PublishedDate = new DateTime(1815, 12, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Emma"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            ISBN = "9780747532699",
                            PageCount = 223,
                            PublishedDate = new DateTime(1997, 6, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Harry Potter and the Philosopher's Stone"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            ISBN = "9780747538493",
                            PageCount = 251,
                            PublishedDate = new DateTime(1998, 7, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Harry Potter and the Chamber of Secrets"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 6,
                            ISBN = "9780684801223",
                            PageCount = 127,
                            PublishedDate = new DateTime(1952, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 4,
                            Title = "The Old Man and the Sea"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 7,
                            ISBN = "9780062073501",
                            PageCount = 256,
                            PublishedDate = new DateTime(1934, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 4,
                            Title = "Murder on the Orient Express"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "80 Strand, London",
                            Name = "Penguin Books",
                            Website = "https://penguin.co.uk"
                        },
                        new
                        {
                            Id = 2,
                            Address = "50 Bedford Square, London",
                            Name = "Bloomsbury",
                            Website = "https://bloomsbury.com"
                        },
                        new
                        {
                            Id = 3,
                            Address = "New York, USA",
                            Name = "Vintage Books",
                            Website = "https://vintagebooks.com"
                        },
                        new
                        {
                            Id = 4,
                            Address = "195 Broadway, New York",
                            Name = "HarperCollins",
                            Website = "https://harpercollins.com"
                        },
                        new
                        {
                            Id = 5,
                            Address = "120 Broadway, New York",
                            Name = "Macmillan",
                            Website = "https://macmillan.com"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany("AuthorsAwards")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Award", "Award")
                        .WithMany("AuthorsAwards")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Award");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Navigation("AuthorsAwards");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Navigation("AuthorsAwards");
                });
#pragma warning restore 612, 618
        }
    }
}
